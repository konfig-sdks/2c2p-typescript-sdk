/* tslint:disable */
/* eslint-disable */
/*
PGW Payment API 4.3

Rest API for PGW payment purpose - LATEST

The version of the OpenAPI document: 4.3


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction, isBrowser } from '../common';
import { fromBuffer } from "file-type/browser"
const FormData = require("form-data")
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { BrowserDetails } from '../models';
// @ts-ignore
import { PaymentOptionDetailsRequest } from '../models';
// @ts-ignore
import { PaymentOptionDetailsResponse } from '../models';
import { paginate } from "../pagination/paginate";
import type * as buffer from "buffer"
import { requestBeforeHook } from '../requestBeforeHook';
/**
 * PaymentOptionDetailsApi - axios parameter creator
 * @export
 */
export const PaymentOptionDetailsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 
         * @summary 
         * @param {PaymentOptionDetailsRequest} [paymentOptionDetailsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postOptionDetails: async (paymentOptionDetailsRequest?: PaymentOptionDetailsRequest, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/payment/4.3/paymentoptiondetails`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: paymentOptionDetailsRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/payment/4.3/paymentoptiondetails',
                httpMethod: 'POST'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(paymentOptionDetailsRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * PaymentOptionDetailsApi - functional programming interface
 * @export
 */
export const PaymentOptionDetailsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = PaymentOptionDetailsApiAxiosParamCreator(configuration)
    return {
        /**
         * 
         * @summary 
         * @param {PaymentOptionDetailsApiPostOptionDetailsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async postOptionDetails(requestParameters: PaymentOptionDetailsApiPostOptionDetailsRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaymentOptionDetailsResponse>> {
            const paymentOptionDetailsRequest: PaymentOptionDetailsRequest = {
                categoryCode: requestParameters.categoryCode,
                groupCode: requestParameters.groupCode,
                paymentToken: requestParameters.paymentToken,
                locale: requestParameters.locale,
                clientID: requestParameters.clientID,
                browserDetails: requestParameters.browserDetails
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.postOptionDetails(paymentOptionDetailsRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * PaymentOptionDetailsApi - factory interface
 * @export
 */
export const PaymentOptionDetailsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = PaymentOptionDetailsApiFp(configuration)
    return {
        /**
         * 
         * @summary 
         * @param {PaymentOptionDetailsApiPostOptionDetailsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        postOptionDetails(requestParameters: PaymentOptionDetailsApiPostOptionDetailsRequest, options?: AxiosRequestConfig): AxiosPromise<PaymentOptionDetailsResponse> {
            return localVarFp.postOptionDetails(requestParameters, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for postOptionDetails operation in PaymentOptionDetailsApi.
 * @export
 * @interface PaymentOptionDetailsApiPostOptionDetailsRequest
 */
export type PaymentOptionDetailsApiPostOptionDetailsRequest = {
    
} & PaymentOptionDetailsRequest

/**
 * PaymentOptionDetailsApiGenerated - object-oriented interface
 * @export
 * @class PaymentOptionDetailsApiGenerated
 * @extends {BaseAPI}
 */
export class PaymentOptionDetailsApiGenerated extends BaseAPI {
    /**
     * 
     * @summary 
     * @param {PaymentOptionDetailsApiPostOptionDetailsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentOptionDetailsApiGenerated
     */
    public postOptionDetails(requestParameters: PaymentOptionDetailsApiPostOptionDetailsRequest, options?: AxiosRequestConfig) {
        return PaymentOptionDetailsApiFp(this.configuration).postOptionDetails(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
}
