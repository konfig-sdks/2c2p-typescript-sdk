/*
PGW Payment API 4.3

Rest API for PGW payment purpose - LATEST

The version of the OpenAPI document: 4.3


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  ApplePayApi,
  CacheApi,
  CancelTransactionApi,
  CardInstallmentPlanInfoApi,
  CardTokenInfoApi,
  ExchangeRateApi,
  InitializationApi,
  LoyaltyPointInfoApi,
  PaymentApi,
  PaymentInquiryApi,
  PaymentInstructionApi,
  PaymentNotificationApi,
  PaymentOptionApi,
  PaymentOptionDetailsApi,
  PaymentSimulateApi,
  PaymentTokenApi,
  RedirectBackEndApi,
  RedirectFrontEndApi,
  TransactionStatusApi,
  UserPreferenceApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { TwoCTwoPCustom } from "./client-custom";

export class TwoCTwoP extends TwoCTwoPCustom {
  readonly applePay: ApplePayApi;
  readonly cache: CacheApi;
  readonly cancelTransaction: CancelTransactionApi;
  readonly cardInstallmentPlanInfo: CardInstallmentPlanInfoApi;
  readonly cardTokenInfo: CardTokenInfoApi;
  readonly exchangeRate: ExchangeRateApi;
  readonly initialization: InitializationApi;
  readonly loyaltyPointInfo: LoyaltyPointInfoApi;
  readonly payment: PaymentApi;
  readonly paymentInquiry: PaymentInquiryApi;
  readonly paymentInstruction: PaymentInstructionApi;
  readonly paymentNotification: PaymentNotificationApi;
  readonly paymentOption: PaymentOptionApi;
  readonly paymentOptionDetails: PaymentOptionDetailsApi;
  readonly paymentSimulate: PaymentSimulateApi;
  readonly paymentToken: PaymentTokenApi;
  readonly redirectBackEnd: RedirectBackEndApi;
  readonly redirectFrontEnd: RedirectFrontEndApi;
  readonly transactionStatus: TransactionStatusApi;
  readonly userPreference: UserPreferenceApi;

  constructor(configurationParameters: ConfigurationParameters = {}) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.applePay = new ApplePayApi(configuration);
    this.cache = new CacheApi(configuration);
    this.cancelTransaction = new CancelTransactionApi(configuration);
    this.cardInstallmentPlanInfo = new CardInstallmentPlanInfoApi(configuration);
    this.cardTokenInfo = new CardTokenInfoApi(configuration);
    this.exchangeRate = new ExchangeRateApi(configuration);
    this.initialization = new InitializationApi(configuration);
    this.loyaltyPointInfo = new LoyaltyPointInfoApi(configuration);
    this.payment = new PaymentApi(configuration);
    this.paymentInquiry = new PaymentInquiryApi(configuration);
    this.paymentInstruction = new PaymentInstructionApi(configuration);
    this.paymentNotification = new PaymentNotificationApi(configuration);
    this.paymentOption = new PaymentOptionApi(configuration);
    this.paymentOptionDetails = new PaymentOptionDetailsApi(configuration);
    this.paymentSimulate = new PaymentSimulateApi(configuration);
    this.paymentToken = new PaymentTokenApi(configuration);
    this.redirectBackEnd = new RedirectBackEndApi(configuration);
    this.redirectFrontEnd = new RedirectFrontEndApi(configuration);
    this.transactionStatus = new TransactionStatusApi(configuration);
    this.userPreference = new UserPreferenceApi(configuration);
  }

}
